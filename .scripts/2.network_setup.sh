#!/bin/bash

# Backup existing /etc/network/interfaces
backup_file="/etc/network/interfaces.$(date +%Y%m%d%H%M%S).backup"
cp /etc/network/interfaces "$backup_file"

# Install Open vSwitch packages
apt update
apt install -y openvswitch-common openvswitch-switch

# Check if the necessary OVS bridges exist; if not, create them
ovs-vsctl br-exists vmbr2 || ovs-vsctl add-br vmbr2
ovs-vsctl br-exists vmbr3 || ovs-vsctl add-br vmbr3
ovs-vsctl br-exists vmbr6 || ovs-vsctl add-br vmbr6

# Add enp0s31f6 to vmbr2
if ! ovs-vsctl list-ports vmbr2 | grep -q "^enp0s31f6$"; then
    ovs-vsctl add-port vmbr2 enp0s31f6
fi

# Assign IP 10.254.251.1/24 to vmbr6
ip addr add 10.254.251.1/24 dev vmbr6

# Generate fresh configuration for /etc/network/interfaces

cat > /etc/network/interfaces <<EOF
# Generated by the script on $(date)

auto lo
iface lo inet loopback

# vmbr0 - WAN
iface enp2s0 inet manual
auto vmbr0
iface vmbr0 inet dhcp
    bridge-ports enp2s0
    bridge-stp off
    bridge-fd 0
#WAN

# vmbr1 - WAN2 (Linux Bridge)
auto vmbr1
iface vmbr1 inet manual
    bridge-ports none
    bridge-stp off
    bridge-fd 0
#WAN2

# vmbr2 - BUSINESS
iface enp0s31f6 inet manual
auto vmbr2
iface vmbr2 inet manual
    ovs_type OVSBridge
    ovs_ports enp0s31f6
#BUSINESS

# vmbr3 - CREW
auto vmbr3
iface vmbr3 inet manual
    ovs_type OVSBridge
#CREW

# vmbr6 - MGMT
auto vmbr6
iface vmbr6 inet static
    address 10.254.251.1
    netmask 255.255.255.0
    ovs_type OVSBridge
#MGMT

EOF

# Restart the networking service to ensure everything is applied correctly
service networking restart

echo "Configuration completed. Backup is saved as $backup_file."
